//
//  DOStyleKit.swift
//  DO
//
//  Created by Alexander Batalov on 12/24/15.
//  Copyright (c) 2015 Postys. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class DOStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let strokeColor: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
    }

    //// Colors

    public class var strokeColor: UIColor { return Cache.strokeColor }

    //// Drawing Methods

    public class func drawWeather(temperature temperature: CGFloat = 67) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Variable Declarations
        let temperatureText = "\(Int(round(temperature)))" + "Â°"

        //// Text Drawing
        let textRect = CGRectMake(0, 2, 25, 16)
        let textStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = .Left

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "Avenir-Book", size: 16)!, NSForegroundColorAttributeName: DOStyleKit.strokeColor, NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = NSString(string: temperatureText).boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        NSString(string: temperatureText).drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)


        //// Page-1
        //// Group 4-Home
        //// navbar
        //// weatherIcon
        //// group 7

        //// bounds Drawing

        //// Page-
        //// Group 4-Home 2
        //// navbar 2
        //// weather 2
        //// group 8
        //// shape Drawing
        let shapePath = UIBezierPath()
        shapePath.moveToPoint(CGPointMake(54.28, 21.75))
        shapePath.addLineToPoint(CGPointMake(45.47, 21.79))
        shapePath.addCurveToPoint(CGPointMake(39.3, 15.77), controlPoint1: CGPointMake(42.06, 21.79), controlPoint2: CGPointMake(39.3, 19.1))
        shapePath.addCurveToPoint(CGPointMake(45.47, 9.75), controlPoint1: CGPointMake(39.3, 12.45), controlPoint2: CGPointMake(42.06, 9.75))
        shapePath.addCurveToPoint(CGPointMake(47, 9.95), controlPoint1: CGPointMake(46, 9.75), controlPoint2: CGPointMake(46.51, 9.82))
        shapePath.addCurveToPoint(CGPointMake(55.16, 4.59), controlPoint1: CGPointMake(48.31, 6.81), controlPoint2: CGPointMake(51.47, 4.59))
        shapePath.addCurveToPoint(CGPointMake(63.97, 13.19), controlPoint1: CGPointMake(60.03, 4.59), controlPoint2: CGPointMake(63.97, 8.44))
        shapePath.addCurveToPoint(CGPointMake(55.16, 21.79), controlPoint1: CGPointMake(63.97, 17.94), controlPoint2: CGPointMake(60.03, 21.79))
        shapePath.addCurveToPoint(CGPointMake(54.28, 21.75), controlPoint1: CGPointMake(54.86, 21.79), controlPoint2: CGPointMake(54.57, 21.78))
        shapePath.closePath()
        shapePath.miterLimit = 4;

        shapePath.usesEvenOddFillRule = true;

        DOStyleKit.strokeColor.setStroke()
        shapePath.lineWidth = 2
        shapePath.stroke()


        //// shape 2 Drawing
        let shape2Path = UIBezierPath()
        shape2Path.moveToPoint(CGPointMake(51.51, 5.99))
        shape2Path.addCurveToPoint(CGPointMake(46.54, 3.58), controlPoint1: CGPointMake(50.38, 4.53), controlPoint2: CGPointMake(48.57, 3.58))
        shape2Path.addCurveToPoint(CGPointMake(40.33, 9.62), controlPoint1: CGPointMake(43.11, 3.58), controlPoint2: CGPointMake(40.33, 6.29))
        shape2Path.addCurveToPoint(CGPointMake(40.9, 12.14), controlPoint1: CGPointMake(40.33, 10.52), controlPoint2: CGPointMake(40.54, 11.37))
        shape2Path.miterLimit = 4;

        shape2Path.usesEvenOddFillRule = true;

        DOStyleKit.strokeColor.setStroke()
        shape2Path.lineWidth = 2
        shape2Path.stroke()
    }

    public class func drawMenu() {

        //// Page-1
        //// Group 4-Home
        //// navbar
        //// menuIcon
        //// group 7
        //// line Drawing
        let linePath = UIBezierPath()
        linePath.moveToPoint(CGPointMake(2.5, 4))
        linePath.addLineToPoint(CGPointMake(22.5, 4))
        linePath.miterLimit = 4;

        linePath.lineCapStyle = .Square;

        linePath.usesEvenOddFillRule = true;

        DOStyleKit.strokeColor.setStroke()
        linePath.lineWidth = 1
        linePath.stroke()

        //// line 2 Drawing
        let line2Path = UIBezierPath()
        line2Path.moveToPoint(CGPointMake(2.5, 12.5))
        line2Path.addLineToPoint(CGPointMake(22.5, 12.5))
        line2Path.miterLimit = 4;

        line2Path.lineCapStyle = .Square;

        line2Path.usesEvenOddFillRule = true;

        DOStyleKit.strokeColor.setStroke()
        line2Path.lineWidth = 1
        line2Path.stroke()

        //// line 3 Drawing
        let line3Path = UIBezierPath()
        line3Path.moveToPoint(CGPointMake(2.5, 21))
        line3Path.addLineToPoint(CGPointMake(22.5, 21))
        line3Path.miterLimit = 4;

        line3Path.lineCapStyle = .Square;

        line3Path.usesEvenOddFillRule = true;

        DOStyleKit.strokeColor.setStroke()
        line3Path.lineWidth = 1
        line3Path.stroke()

        //// bounds Drawing
    }

}
